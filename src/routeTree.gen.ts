/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'

// Create Virtual Routes

const UsersLazyImport = createFileRoute('/users')()
const SettingsLazyImport = createFileRoute('/settings')()
const RequestsLazyImport = createFileRoute('/requests')()
const PostsLazyImport = createFileRoute('/posts')()
const HostLazyImport = createFileRoute('/host')()
const DynamicPagesLazyImport = createFileRoute('/dynamic-pages')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const UsersLazyRoute = UsersLazyImport.update({
  path: '/users',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/users.lazy').then((d) => d.Route))

const SettingsLazyRoute = SettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const RequestsLazyRoute = RequestsLazyImport.update({
  path: '/requests',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/requests.lazy').then((d) => d.Route))

const PostsLazyRoute = PostsLazyImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/posts.lazy').then((d) => d.Route))

const HostLazyRoute = HostLazyImport.update({
  path: '/host',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/host.lazy').then((d) => d.Route))

const DynamicPagesLazyRoute = DynamicPagesLazyImport.update({
  path: '/dynamic-pages',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dynamic-pages.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dynamic-pages': {
      id: '/dynamic-pages'
      path: '/dynamic-pages'
      fullPath: '/dynamic-pages'
      preLoaderRoute: typeof DynamicPagesLazyImport
      parentRoute: typeof rootRoute
    }
    '/host': {
      id: '/host'
      path: '/host'
      fullPath: '/host'
      preLoaderRoute: typeof HostLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsLazyImport
      parentRoute: typeof rootRoute
    }
    '/requests': {
      id: '/requests'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof RequestsLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/dynamic-pages': typeof DynamicPagesLazyRoute
  '/host': typeof HostLazyRoute
  '/posts': typeof PostsLazyRoute
  '/requests': typeof RequestsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/users': typeof UsersLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/dynamic-pages': typeof DynamicPagesLazyRoute
  '/host': typeof HostLazyRoute
  '/posts': typeof PostsLazyRoute
  '/requests': typeof RequestsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/users': typeof UsersLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/dynamic-pages': typeof DynamicPagesLazyRoute
  '/host': typeof HostLazyRoute
  '/posts': typeof PostsLazyRoute
  '/requests': typeof RequestsLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/users': typeof UsersLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dynamic-pages'
    | '/host'
    | '/posts'
    | '/requests'
    | '/settings'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dynamic-pages'
    | '/host'
    | '/posts'
    | '/requests'
    | '/settings'
    | '/users'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/dynamic-pages'
    | '/host'
    | '/posts'
    | '/requests'
    | '/settings'
    | '/users'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginRoute: typeof LoginRoute
  DynamicPagesLazyRoute: typeof DynamicPagesLazyRoute
  HostLazyRoute: typeof HostLazyRoute
  PostsLazyRoute: typeof PostsLazyRoute
  RequestsLazyRoute: typeof RequestsLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
  UsersLazyRoute: typeof UsersLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginRoute: LoginRoute,
  DynamicPagesLazyRoute: DynamicPagesLazyRoute,
  HostLazyRoute: HostLazyRoute,
  PostsLazyRoute: PostsLazyRoute,
  RequestsLazyRoute: RequestsLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
  UsersLazyRoute: UsersLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/dynamic-pages",
        "/host",
        "/posts",
        "/requests",
        "/settings",
        "/users"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dynamic-pages": {
      "filePath": "dynamic-pages.lazy.tsx"
    },
    "/host": {
      "filePath": "host.lazy.tsx"
    },
    "/posts": {
      "filePath": "posts.lazy.tsx"
    },
    "/requests": {
      "filePath": "requests.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    },
    "/users": {
      "filePath": "users.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
